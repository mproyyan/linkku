{
   "openapi": "3.0.3",
   "info": {
      "title": "Linkku RESTful API",
      "description": "Linkku is RESTfull App that save and manage your links",
      "contact": {
         "name": "Muhammad Pandu Royyan",
         "email": "mproyyan@gmail.com",
         "url": "http://linkku.test/contact"
      },
      "license": {
         "name": "APACHE 2.0",
         "url": "https://www.apache.org/licenses/LICENSE-2.0"
      },
      "termsOfService": "http://linkku.test/terms",
      "version": "1.0.0"
   },
   "servers": [
      {
         "url": "http://linkku.test/api",
         "description": "Linkku RESTful server"
      }
   ],
   "paths": {
      "/register": {
         "post": {
            "tags": ["Authentication"],
            "summary": "Register new account",
            "description": "Register new account with fresh email",
            "requestBody": {
               "required": true,
               "description": "This data needed for register new acount",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "object",
                        "properties": {
                           "name": {
                              "type": "string",
                              "pattern": "^[a-zA-Z\\s]{1,50}"
                           },
                           "username": {
                              "type": "string",
                              "pattern": "^[a-z0-9_.]{5,15}"
                           },
                           "email": {
                              "type": "string",
                              "format": "email"
                           },
                           "password": {
                              "type": "string",
                              "format": "password"
                           },
                           "passwor_confirmation": {
                              "type": "string",
                              "format": "password"
                           }
                        }
                     },
                     "examples": {
                        "Jhon Doe": {
                           "$ref": "#/components/examples/RegisterBodyExample"
                        }
                     }
                  }
               }
            },
            "responses": {
               "201": {
                  "description": "New account created successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/AuthSuccessResponse"
                        },
                        "examples": {
                           "Jhon Doe": {
                              "$ref": "#/components/examples/AuthSuccessResponseExample"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/login": {
         "post": {
            "tags": ["Authentication"],
            "summary": "Account login",
            "requestBody": {
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "object",
                        "properties": {
                           "email": {
                              "type": "string",
                              "format": "email"
                           },
                           "password": {
                              "type": "string",
                              "format": "password"
                           }
                        }
                     },
                     "examples": {
                        "Jhon Doe": {
                           "value": {
                              "email": "jhondoe@example.com",
                              "password": "SecretPassword123"
                           }
                        }
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Login successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/AuthSuccessResponse"
                        },
                        "examples": {
                           "Jhon Doe": {
                              "$ref": "#/components/examples/AuthSuccessResponseExample"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/logout": {
         "post": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Authentication"],
            "responses": {
               "200": {
                  "description": "Account logout successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "success": {
                                 "type": "boolean"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/user": {
         "get": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Profile"],
            "summary": "Get authenticated user by request",
            "description": "Get authenticated user based on the the request sent",
            "responses": {
               "200": {
                  "description": "Successfully get authenticated user",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "user": {
                                 "$ref": "#/components/schemas/UserSchema"
                              }
                           }
                        },
                        "examples": {
                           "Jhon Doe": {
                              "$ref": "#/components/examples/UserExampleJhonDoe"
                           },
                           "Jonathan": {
                              "$ref": "#/components/examples/UserExampleJonathan"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/user/{username}": {
         "get": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Profile"],
            "summary": "Get user profile",
            "description": "Get user profile as owner if include Authorization token",
            "parameters": [
               {
                  "$ref": "#/components/parameters/UsernameParameter"
               }
            ],
            "responses": {
               "200": {
                  "description": "Successfully get user profile",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "owner": {
                                 "type": "boolean"
                              },
                              "user": {
                                 "$ref": "#/components/schemas/UserSchema"
                              }
                           }
                        },
                        "examples": {
                           "Jhon Doe": {
                              "value": {
                                 "owner": true,
                                 "user": {
                                    "id": 1,
                                    "name": "Jhon Doe",
                                    "username": "jhondoe5547",
                                    "email": "jhondoe@example.com",
                                    "image_url": null,
                                    "banner_url": null,
                                    "created_at": "2022-05-22T02:10:44.589Z",
                                    "updated_at": "2022-05-22T02:10:44.589Z"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/user/{username}/update-banner": {
         "post": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Profile"],
            "summary": "Update user banner",
            "description": "Update user banner and delete old banner",
            "requestBody": {
               "content": {
                  "multipart/form-data": {
                     "schema":{
                        "type": "object",
                        "required": ["banner"],
                        "properties": {
                           "banner": {
                              "type": "string",
                              "format": "binary"
                           },
                           "_method": {
                              "type": "string",
                              "example": "PUT"
                           }
                        }
                     }
                  }
               }
            },
            "parameters": [
               {
                  "$ref": "#/components/parameters/UsernameParameter"
               }
            ],
            "responses": {
               "200": {
                  "description": "Successfully update banner",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "owner": {
                                 "type": "boolean"
                              },
                              "user": {
                                 "$ref": "#/components/schemas/UserSchema"
                              }
                           }
                        },
                        "examples": {
                           "Jhon Doe": {
                              "value": {
                                 "owner": true,
                                 "user": {
                                    "id": 1,
                                    "name": "Jhon Doe",
                                    "username": "jhondoe5547",
                                    "email": "jhondoe@example.com",
                                    "image_url": null,
                                    "banner_url": "http://linkku.test/storage/banner/banner.png",
                                    "created_at": "2022-05-22T02:10:44.589Z",
                                    "updated_at": "2022-05-22T02:10:44.589Z"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/user/{username}/update-profile": {
         "post": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Profile"],
            "summary": "Update user profile",
            "description": "Update user profile with new data",
            "parameters": [
               {
                  "$ref": "#/components/parameters/UsernameParameter"
               }
            ],
            "requestBody": {
               "required": true,
               "content": {
                  "multipart/form-data": {
                     "schema": {
                        "type": "object",
                        "properties": {
                           "name": {
                              "type": "string",
                              "pattern": "^[a-zA-Z\\s]{1,50}",
                              "nullable": true
                           },
                           "username": {
                              "type": "string",
                              "pattern": "^[a-z0-9_.]{5,15}",
                              "nullable": true
                           },
                           "image": {
                              "type": "string",
                              "format": "binary",
                              "nullable": true
                           },
                           "_method": {
                              "type": "string",
                              "example": "PUT"
                           }
                        }
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successfully update user profile",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "owner": {
                                 "type": "boolean"
                              },
                              "user": {
                                 "$ref": "#/components/schemas/UserSchema"
                              }
                           }
                        },
                        "examples": {
                           "Jhon Doe": {
                              "value": {
                                 "owner": true,
                                 "user": {
                                    "id": 1,
                                    "name": "Jhon Doe",
                                    "username": "jhondoe5547",
                                    "email": "jhondoe@example.com",
                                    "image_url": "http://linkku.test/storage/avatar/profile-picture.png",
                                    "banner_url": null,
                                    "created_at": "2022-05-22T02:10:44.589Z",
                                    "updated_at": "2022-05-22T02:10:44.589Z"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/links": {
         "get": {
            "tags": ["Link"],
            "summary": "Get all link",
            "description": "Get all link with public visibility only",
            "responses": {
               "200": {
                  "description": "Get all links successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "data": {
                                 "type": "array",
                                 "items": {
                                    "$ref": "#/components/schemas/LinkSchema"
                                 }
                              },
                              "links": {
                                 "$ref": "#/components/schemas/PaginationLinksSchema"
                              },
                              "meta": {
                                 "$ref": "#/components/schemas/PaginationMetaSchema"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "post": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Link"],
            "summary": "Create new link",
            "description": "Create new link and store to database",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpdateOrCreateLinkSchema"
                     }
                  }
               }
            },
            "responses": {
               "201": {
                  "description": "Create new link successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "link": {
                                 "$ref": "#/components/schemas/LinkSchema"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/links/{slug}": {
         "get": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Link"],
            "summary": "Get link by slug",
            "description": "If user include token and token is valid then user can get his own private link",
            "parameters": [
               {
                  "$ref": "#/components/parameters/SlugParameter"
               }
            ],
            "responses": {
               "200": {
                  "description": "Get link by slug successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "link": {
                                 "$ref": "#/components/schemas/LinkSchema"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "put": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Link"],
            "summary": "Update exists link",
            "description": "Update exists link in database by slug",
            "parameters": [
               {
                  "$ref": "#/components/parameters/SlugParameter"
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpdateOrCreateLinkSchema"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Edit exists link successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "link": {
                                 "$ref": "#/components/schemas/LinkSchema"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "delete": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Link"],
            "summary": "Delete link",
            "description": "Delete exists link in database by slug",
            "parameters": [
               {
                  "$ref": "#/components/parameters/SlugParameter"
               }
            ],
            "responses": {
               "200": {
                  "description": "Delete link successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "status": {
                                 "type": "boolean"
                              },
                              "message": {
                                 "type": "string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/g/{hash}": {
         "get": {
            "tags": ["Link"],
            "summary": "Get url from link",
            "description": "Get url from link by link hash and if user include token and token is valid then user can get his own private link",
            "parameters": [
               {
                  "$ref": "#/components/parameters/HashParamater"
               }
            ],
            "responses": {
               "200": {
                  "description": "Get url from link successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "url": {
                                 "type": "string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/archives": {
         "get": {
            "tags": ["Archive"],
            "summary": "Get all archives",
            "description": "Get all archives with public visibiity only",
            "responses": {
               "200": {
                  "description": "Get all archives successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "data": {
                                 "type": "array",
                                 "items": {
                                    "$ref": "#/components/schemas/ArchiveSchema"
                                 }
                              },
                              "links": {
                                 "$ref": "#/components/schemas/PaginationLinksSchema"
                              },
                              "meta": {
                                 "$ref": "#/components/schemas/PaginationMetaSchema"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "post": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Archive"],
            "summary": "Create new archive",
            "description": "Create new archive and then store to database",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpdateOrCreateArchiveSchema"
                     }
                  }
               }
            },
            "responses": {
               "201": {
                  "description": "Archive created successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "archive": {
                                 "$ref": "#/components/schemas/ArchiveSchema"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/archives/{slug}": {
         "get": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Archive"],
            "summary": "Get archive",
            "description": "Get only public archive by slug, if user request include token and token is valid then user can get his own private archive",
            "parameters": [
               {
                  "$ref": "#/components/parameters/SlugParameter"
               }
            ],
            "responses": {
               "200": {
                  "description": "Get archive successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "archive": {
                                 "$ref": "#/components/schemas/ArchiveSchema"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "put": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Archive"],
            "summary": "Update exists archive",
            "description": "Only archive owner can edit archive",
            "parameters": [
               {
                  "$ref": "#/components/parameters/SlugParameter"
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/UpdateOrCreateArchiveSchema"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Update exists archive successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "archive": {
                                 "$ref": "#/components/schemas/ArchiveSchema"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "delete": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Archive"],
            "summary": "Delete exists archive",
            "description": "Only archive owner can delete archive from database",
            "parameters": [
               {
                  "$ref": "#/components/parameters/SlugParameter"
               }
            ],
            "responses": {
               "200": {
                  "description": "Archive deleted successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "status": {
                                 "type": "boolean"
                              },
                              "message": {
                                 "type": "string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/archives/links/{slug}": {
         "get": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Archive"],
            "summary": "Get links from an archive",
            "description": "Get links from public archive if token include and token is valid then user can get links from private archive",
            "parameters": [
               {
                  "$ref": "#/components/parameters/SlugParameter"
               }
            ],
            "responses": {
               "200": {
                  "description": "Get links from an archive successfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "data": {
                                 "type": "array",
                                 "items": {
                                    "$ref": "#/components/schemas/LinkSchema"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/archives/{slug}/add/{hash}": {
         "post": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Archive"],
            "summary": "Add new link to archive",
            "description": "First search link by hash then search archive by slug if both exists try add link to archive",
            "parameters": [
               {
                  "$ref": "#/components/parameters/SlugParameter"
               },
               {
                  "$ref": "#/components/parameters/HashParamater"
               }
            ],
            "responses": {
               "201": {
                  "description": "Added new link to archive succesfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "status": {
                                 "type": "boolean"
                              },
                              "message": {
                                 "type": "string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/archives/{slug}/del/{hash}": {
         "delete": {
            "security": [
               {
                  "SanctumAuth": []
               }
            ],
            "tags": ["Archive"],
            "summary": "Delete exist link from archive",
            "description": "First search link by hash then search archive by slug if both exists try remove link from archive, but only archive owner can do this",
            "parameters": [
               {
                  "$ref": "#/components/parameters/SlugParameter"
               },
               {
                  "$ref": "#/components/parameters/HashParamater"
               }
            ],
            "responses": {
               "200": {
                  "description": "Removed exists link from archive succesfully",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "status": {
                                 "type": "boolean"
                              },
                              "message": {
                                 "type": "string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "AuthSuccessResponse": {
            "type": "object",
            "properties": {
               "user": {
                  "$ref": "#/components/schemas/UserSchema"
               },
               "token": {
                  "type": "string"
               }
            }
         },
         "UserSchema": {
            "type": "object",
            "properties": {
               "id": {
                  "type": "integer",
                  "format": "int64"
               },
               "name": {
                  "type": "string",
                  "pattern": "^[a-zA-Z\\s]{1,50}"
               },
               "username": {
                  "type": "string",
                  "pattern": "^[a-z0-9_.]{5,15}"
               },
               "email": {
                  "type": "string",
                  "format": "email"
               },
               "image_url": {
                  "type": "string",
                  "nullable": true,
                  "default": null
               },
               "banner_url": {
                  "type": "string",
                  "nullable": true,
                  "default": null
               },
               "created_at": {
                  "type": "string",
                  "format": "date-time"
               },
               "updated_at": {
                  "type": "string",
                  "format": "date-time"
               }
            }
         }, 
         "LinkSchema": {
            "type": "object",
            "properties": {
               "id": {
                  "type": "integer",
                  "format": "int64"
               },
               "hash": {
                  "type": "string"
               },
               "author": {
                  "$ref": "#/components/schemas/UserSchema"
               },
               "title": {
                  "type": "string"
               },
               "slug": {
                  "type": "string"
               },
               "description": {
                  "type": "string",
                  "nullable": true
               },
               "excerpt": {
                  "type": "string",
                  "nullable": true
               },
               "views": {
                  "type": "integer",
                  "format": "int64"
               },
               "visibility": {
                  "type": "string"
               },
               "tags": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/TagSchema"
                  }
               }
            }
         },
         "ArchiveSchema": {
            "type": "object",
            "properties": {
               "id": {
                  "type": "integer"
               },
               "author": {
                  "$ref": "#/components/schemas/UserSchema"
               },
               "title": {
                  "type": "string"
               },
               "slug": {
                  "type": "string"
               },
               "description": {
                  "type": "string",
                  "nullable": true
               },
               "excerpt": {
                  "type": "string",
                  "nullable": true
               },
               "visibility": {
                  "type": "string"
               },
               "tags": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/TagSchema"
                  }  
               },
               "links_count": {
                  "type": "integer",
                  "default": 0
               }
            }
         },
         "TagSchema": {
            "type": "object",
            "properties": {
               "id": {
                  "type": "integer",
                  "format": "int32"
               },
               "name": {
                  "type": "string"
               },
               "slug": {
                  "type": "string"
               }
            }
         },
         "UpdateOrCreateLinkSchema": {
            "type": "object",
            "properties": {
               "title": {
                  "type": "string"
               },
               "description": {
                  "type": "string",
                  "nullable": true
               },
               "url": {
                  "type": "string"
               },
               "tags": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 5,
                  "items": {
                     "type": "integer"
                  }
               },
               "visibility": {
                  "type": "integer"
               }
            }
         },
         "UpdateOrCreateArchiveSchema": {
            "type": "object",
            "properties": {
               "title": {
                  "type": "string"
               },
               "description": {
                  "type": "string",
                  "nullable": true
               },
               "url": {
                  "type": "string"
               },
               "tags": {
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 5,
                  "items": {
                     "type": "integer"
                  }
               },
               "visibility": {
                  "type": "integer"
               }
            }
         },
         "PaginationLinksSchema": {
            "type": "object",
            "properties": {
               "first": {
                  "type": "string"
               },
               "last": {
                  "type": "string"
               },
               "prev": {
                  "type": "string",
                  "nullable": true
               },
               "next": {
                  "type": "string",
                  "nullable": true
               }
            }
         },
         "PaginationMetaSchema": {
            "type": "object",
            "properties": {
               "current_page": {
                  "type": "integer"
               },
               "from": {
                  "type": "integer"
               },
               "last_page": {
                  "type": "integer"
               },
               "links": {
                  "type": "array",
                  "items": {
                     "type": "object",
                     "properties": {
                        "url": {
                           "type": "string",
                           "nullable": true
                        },
                        "label": {
                           "type": "string"
                        },
                        "active": {
                           "type": "boolean"
                        }
                     }
                  }
               },
               "path": {
                  "type": "string"
               },
               "per_page": {
                  "type": "integer"
               },
               "to": {
                  "type": "integer"
               },
               "total": {
                  "type": "integer"
               }
            }
         }
      },
      "examples": {
         "RegisterBodyExample": {
            "value": {
               "name": "Jhon Doe",
               "username": "jhondoe5547",
               "email": "jhondoe@example.com",
               "password": "SecretPassword123",
               "password_confirmation": "SecretPassword123"
            }
         },
         "AuthSuccessResponseExample": {
            "value": {
               "user": {
                  "id": 1,
                  "name": "Jhon Doe",
                  "username": "jhondoe5547",
                  "email": "jhondoe@example.com",
                  "image_url": null,
                  "banner_url": null,
                  "created_at": "2022-05-22T02:10:44.589Z",
                  "updated_at": "2022-05-22T02:10:44.589Z"
               },
               "token": "1|PYeATNqRmuHUtbMevwMi5R379FAMExl98SYYkWVa"
            }
         },
         "UserExampleJhonDoe": {
            "value": {
               "user": {
                  "id": 1,
                  "name": "Jhon Doe",
                  "username": "jhondoe5547",
                  "email": "jhondoe@example.com",
                  "image_url": null,
                  "banner_url": null,
                  "created_at": "2022-05-22T02:10:44.589Z",
                  "updated_at": "2022-05-22T02:10:44.589Z"
               }
            }
         },
         "UserExampleJonathan": {
            "value": {
               "user": {
                  "id": 2,
                  "name": "Jonathan",
                  "username": "jonathan",
                  "email": "jonathan@example.com",
                  "image_url": null,
                  "banner_url": null,
                  "created_at": "2022-05-22T02:10:44.589Z",
                  "updated_at": "2022-05-22T02:10:44.589Z"
               }
            }
         }
      },
      "parameters": {
         "SlugParameter": {
            "required": true,
            "name": "slug",
            "in": "path",
            "schema": {
               "type": "string"
            }
         },
         "HashParamater": {
            "required": true,
            "name": "hash",
            "in": "path",
            "schema": {
               "type": "string"
            }
         },
         "UsernameParameter": {
            "name": "username",
            "description": "Get user profile by username",
            "required": true,
            "in": "path",
            "schema": {
               "type": "string",
               "pattern": "^[a-z0-9._]{5,15}"
            }
         }
      },
      "securitySchemes": {
         "SanctumAuth": {
            "type": "http",
            "scheme": "bearer"
         }
      }
   }
}